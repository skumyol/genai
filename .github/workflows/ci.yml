name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Build frontend
      run: npm run build
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Test backend imports
      run: |
        cd backend
        python -c "
        try:
            from app import app
            print('✅ Backend imports successful')
        except Exception as e:
            print(f'❌ Backend import failed: {e}')
            exit(1)
        "

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build backend Docker image
      run: docker build -f Dockerfile.backend -t narrativehive-backend:test .
    
    - name: Build frontend Docker image  
      run: docker build -f Dockerfile.frontend -t narrativehive-frontend:test .
    
    - name: Test backend container
      run: |
        docker run -d --name test-backend -p 5002:5002 narrativehive-backend:test
        sleep 10
        curl -f http://localhost:5002/api/health || exit 1
        docker stop test-backend
        docker rm test-backend
    
    - name: Test frontend container
      run: |
        docker run -d --name test-frontend -p 8080:80 narrativehive-frontend:test
        sleep 5
        curl -f http://localhost:8080/ || exit 1
        docker stop test-frontend
        docker rm test-frontend
